var com_xsens_mvn_mvnx_Module_Factory = function () {
  var com_xsens_mvn_mvnx = {
    name: 'com_xsens_mvn_mvnx',
    defaultElementNamespaceURI: 'http:\/\/www.xsens.com\/mvn\/mvnx',
    typeInfos: [{
        localName: 'Mvnx',
        typeName: null,
        propertyInfos: [{
            name: 'mvn',
            required: true,
            typeInfo: '.Mvn'
          }, {
            name: 'comment',
            required: true
          }, {
            name: 'subject',
            required: true,
            typeInfo: '.Subject'
          }, {
            name: 'securityCode',
            required: true,
            typeInfo: '.SecurityCode'
          }, {
            name: 'version',
            required: true,
            attributeName: {
              localPart: 'version'
            },
            type: 'attribute'
          }, {
            name: 'wavFile',
            attributeName: {
              localPart: 'wav_file'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'Mvn',
        typeName: null,
        propertyInfos: [{
            name: 'version',
            required: true,
            attributeName: {
              localPart: 'version'
            },
            type: 'attribute'
          }, {
            name: 'build',
            required: true,
            attributeName: {
              localPart: 'build'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'Subject',
        typeName: null,
        propertyInfos: [{
            name: 'comment',
            required: true
          }, {
            name: 'segments',
            required: true,
            typeInfo: '.Segments'
          }, {
            name: 'sensors',
            required: true,
            typeInfo: '.Sensors'
          }, {
            name: 'joints',
            required: true,
            typeInfo: '.Joints'
          }, {
            name: 'ergonomicJointAngles',
            required: true,
            typeInfo: '.ErgonomicJointAngles'
          }, {
            name: 'footContactDefinition',
            required: true,
            typeInfo: '.FootContactDefinition'
          }, {
            name: 'frames',
            required: true,
            typeInfo: '.Frames'
          }, {
            name: 'label',
            required: true,
            attributeName: {
              localPart: 'label'
            },
            type: 'attribute'
          }, {
            name: 'torsoColor',
            required: true,
            attributeName: {
              localPart: 'torsoColor'
            },
            type: 'attribute'
          }, {
            name: 'frameRate',
            required: true,
            typeInfo: 'NonNegativeInteger',
            attributeName: {
              localPart: 'frameRate'
            },
            type: 'attribute'
          }, {
            name: 'segmentCount',
            required: true,
            attributeName: {
              localPart: 'segmentCount'
            },
            type: 'attribute'
          }, {
            name: 'recDate',
            required: true,
            attributeName: {
              localPart: 'recDate'
            },
            type: 'attribute'
          }, {
            name: 'originalFilename',
            required: true,
            attributeName: {
              localPart: 'originalFilename'
            },
            type: 'attribute'
          }, {
            name: 'configuration',
            required: true,
            attributeName: {
              localPart: 'configuration'
            },
            type: 'attribute'
          }, {
            name: 'userScenario',
            required: true,
            attributeName: {
              localPart: 'userScenario'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'Joints',
        typeName: null,
        propertyInfos: [{
            name: 'joint',
            required: true,
            collection: true,
            typeInfo: '.Joint'
          }]
      }, {
        localName: 'FootContactDefinition',
        typeName: null,
        propertyInfos: [{
            name: 'contactDefinition',
            required: true,
            collection: true,
            typeInfo: '.ContactDefinition'
          }]
      }, {
        localName: 'SecurityCode',
        typeName: null,
        propertyInfos: [{
            name: 'code',
            required: true,
            attributeName: {
              localPart: 'code'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ContactDefinition',
        typeName: null,
        propertyInfos: [{
            name: 'label',
            required: true,
            attributeName: {
              localPart: 'label'
            },
            type: 'attribute'
          }, {
            name: 'index',
            required: true,
            typeInfo: 'NonNegativeInteger',
            attributeName: {
              localPart: 'index'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'Points',
        typeName: null,
        propertyInfos: [{
            name: 'point',
            required: true,
            collection: true,
            typeInfo: '.Point'
          }]
      }, {
        localName: 'Segments',
        typeName: null,
        propertyInfos: [{
            name: 'segment',
            required: true,
            collection: true,
            typeInfo: '.Segment'
          }]
      }, {
        localName: 'Joint',
        typeName: null,
        propertyInfos: [{
            name: 'connector1',
            required: true
          }, {
            name: 'connector2',
            required: true
          }, {
            name: 'label',
            required: true,
            attributeName: {
              localPart: 'label'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'Point',
        typeName: null,
        propertyInfos: [{
            name: 'posB',
            required: true,
            elementName: 'pos_b'
          }, {
            name: 'label',
            required: true,
            attributeName: {
              localPart: 'label'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'Segment',
        typeName: null,
        propertyInfos: [{
            name: 'points',
            required: true,
            typeInfo: '.Points'
          }, {
            name: 'label',
            required: true,
            attributeName: {
              localPart: 'label'
            },
            type: 'attribute'
          }, {
            name: 'id',
            required: true,
            typeInfo: 'NonNegativeInteger',
            attributeName: {
              localPart: 'id'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ErgonomicJointAngle',
        typeName: null,
        propertyInfos: [{
            name: 'label',
            required: true,
            attributeName: {
              localPart: 'label'
            },
            type: 'attribute'
          }, {
            name: 'index',
            required: true,
            typeInfo: 'NonNegativeInteger',
            attributeName: {
              localPart: 'index'
            },
            type: 'attribute'
          }, {
            name: 'parentSegment',
            required: true,
            attributeName: {
              localPart: 'parentSegment'
            },
            type: 'attribute'
          }, {
            name: 'childSegment',
            required: true,
            attributeName: {
              localPart: 'childSegment'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ErgonomicJointAngles',
        typeName: null,
        propertyInfos: [{
            name: 'ergonomicJointAngle',
            required: true,
            collection: true,
            typeInfo: '.ErgonomicJointAngle'
          }]
      }, {
        localName: 'Frame',
        typeName: null,
        propertyInfos: [{
            name: 'orientation',
            required: true
          }, {
            name: 'position',
            required: true
          }, {
            name: 'velocity',
            required: true
          }, {
            name: 'acceleration',
            required: true
          }, {
            name: 'angularVelocity',
            required: true
          }, {
            name: 'angularAcceleration',
            required: true
          }, {
            name: 'footContacts',
            required: true
          }, {
            name: 'sensorFreeAcceleration',
            required: true
          }, {
            name: 'sensorAngularVelocity',
            required: true
          }, {
            name: 'sensorMagneticField',
            required: true
          }, {
            name: 'sensorOrientation',
            required: true
          }, {
            name: 'jointAngle',
            required: true
          }, {
            name: 'jointAngleXZY',
            required: true
          }, {
            name: 'jointAngleErgo',
            required: true
          }, {
            name: 'centerOfMass',
            required: true
          }, {
            name: 'marker',
            required: true
          }, {
            name: 'time',
            required: true,
            attributeName: {
              localPart: 'time'
            },
            type: 'attribute'
          }, {
            name: 'index',
            attributeName: {
              localPart: 'index'
            },
            type: 'attribute'
          }, {
            name: 'tc',
            attributeName: {
              localPart: 'tc'
            },
            type: 'attribute'
          }, {
            name: 'ms',
            attributeName: {
              localPart: 'ms'
            },
            type: 'attribute'
          }, {
            name: 'type',
            required: true,
            attributeName: {
              localPart: 'type'
            },
            type: 'attribute'
          }, {
            name: 'audioSample',
            attributeName: {
              localPart: 'audio_sample'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'Sensor',
        typeName: null,
        propertyInfos: [{
            name: 'label',
            required: true,
            attributeName: {
              localPart: 'label'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'Sensors',
        typeName: null,
        propertyInfos: [{
            name: 'sensor',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Sensor'
          }]
      }, {
        localName: 'Frames',
        typeName: null,
        propertyInfos: [{
            name: 'frame',
            required: true,
            collection: true,
            typeInfo: '.Frame'
          }, {
            name: 'segmentCount',
            required: true,
            attributeName: {
              localPart: 'segmentCount'
            },
            type: 'attribute'
          }, {
            name: 'sensorCount',
            attributeName: {
              localPart: 'sensorCount'
            },
            type: 'attribute'
          }, {
            name: 'jointCount',
            attributeName: {
              localPart: 'jointCount'
            },
            type: 'attribute'
          }]
      }],
    elementInfos: [{
        typeInfo: '.ErgonomicJointAngles',
        elementName: 'ergonomicJointAngles'
      }, {
        typeInfo: '.Sensors',
        elementName: 'sensors'
      }, {
        elementName: 'orientation'
      }, {
        typeInfo: '.ErgonomicJointAngle',
        elementName: 'ergonomicJointAngle'
      }, {
        typeInfo: '.Mvnx',
        elementName: 'mvnx'
      }, {
        elementName: 'pos_b'
      }, {
        elementName: 'velocity'
      }, {
        typeInfo: '.Segment',
        elementName: 'segment'
      }, {
        typeInfo: '.SecurityCode',
        elementName: 'securityCode'
      }, {
        elementName: 'acceleration'
      }, {
        elementName: 'angularAcceleration'
      }, {
        elementName: 'jointAngleErgo'
      }, {
        elementName: 'connector1'
      }, {
        elementName: 'sensorFreeAcceleration'
      }, {
        elementName: 'position'
      }, {
        elementName: 'jointAngleXZY'
      }, {
        typeInfo: '.Subject',
        elementName: 'subject'
      }, {
        typeInfo: '.Segments',
        elementName: 'segments'
      }, {
        typeInfo: '.Frame',
        elementName: 'frame'
      }, {
        elementName: 'comment'
      }, {
        typeInfo: '.Mvn',
        elementName: 'mvn'
      }, {
        typeInfo: '.Sensor',
        elementName: 'sensor'
      }, {
        typeInfo: '.Joints',
        elementName: 'joints'
      }, {
        typeInfo: '.FootContactDefinition',
        elementName: 'footContactDefinition'
      }, {
        elementName: 'centerOfMass'
      }, {
        elementName: 'connector2'
      }, {
        elementName: 'sensorMagneticField'
      }, {
        typeInfo: '.Point',
        elementName: 'point'
      }, {
        typeInfo: '.Frames',
        elementName: 'frames'
      }, {
        elementName: 'footContacts'
      }, {
        typeInfo: '.ContactDefinition',
        elementName: 'contactDefinition'
      }, {
        elementName: 'marker'
      }, {
        elementName: 'jointAngle'
      }, {
        elementName: 'sensorOrientation'
      }, {
        typeInfo: '.Points',
        elementName: 'points'
      }, {
        elementName: 'sensorAngularVelocity'
      }, {
        elementName: 'angularVelocity'
      }, {
        typeInfo: '.Joint',
        elementName: 'joint'
      }]
  };
  return {
    com_xsens_mvn_mvnx: com_xsens_mvn_mvnx
  };
};
if (typeof define === 'function' && define.amd) {
  define([], com_xsens_mvn_mvnx_Module_Factory);
}
else {
  var com_xsens_mvn_mvnx_Module = com_xsens_mvn_mvnx_Module_Factory();
  if (typeof module !== 'undefined' && module.exports) {
    module.exports.com_xsens_mvn_mvnx = com_xsens_mvn_mvnx_Module.com_xsens_mvn_mvnx;
  }
  else {
    var com_xsens_mvn_mvnx = com_xsens_mvn_mvnx_Module.com_xsens_mvn_mvnx;
  }
}